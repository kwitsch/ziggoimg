name: Build Development

on:
  push:
    branches:
      - main

permissions:
  security-events: write
  actions: read
  contents: read
  packages: write

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Zig
        id: cache-zig
        uses: actions/cache@v3
        with:
          key: zig-0.10.1
          path: |
            zig.tar.xz
            zig.tar.xz.minisign
      
      - name: Get Zig
        if: steps.cache-zig.outputs.cache-hit != 'true'
        uses: wei/curl@master
        with:
          args: |
            --location 
            --request GET 'https://ziglang.org/download/0.10.1/zig-linux-x86_64-0.10.1.tar.xz'
            --header 'User-Agent: Chrome/113.0.0.0'
            --header 'Referer: https://ziglang.org/download/'
            --header 'Sec-Ch-Ua: "Google Chrome";v="113", "Chromium";v="113", "Not-A.Brand";v="24"'
            --header 'Sec-Ch-Ua-Mobile: ?0'
            --header 'Sec-Ch-Ua-Platform: "Linux"'
            --header 'Sec-Fetch-Dest: document'
            --header 'Sec-Fetch-Mode: navigate'
            --header 'Sec-Fetch-Site: same-origin'
            --header 'Sec-Fetch-User: ?1'
            -o 'zig.tar.xz'

      - name: Get minisign 
        if: steps.cache-zig.outputs.cache-hit != 'true'
        uses: wei/curl@master
        with:
          args: |
            --location 
            --request GET 'https://ziglang.org/download/0.10.1/zig-linux-x86_64-0.10.1.tar.xz.minisign'
            --header 'User-Agent: Chrome/113.0.0.0'
            --header 'Referer: https://ziglang.org/download/'
            --header 'Sec-Ch-Ua: "Google Chrome";v="113", "Chromium";v="113", "Not-A.Brand";v="24"'
            --header 'Sec-Ch-Ua-Mobile: ?0'
            --header 'Sec-Ch-Ua-Platform: "Linux"'
            --header 'Sec-Fetch-Dest: document'
            --header 'Sec-Fetch-Mode: navigate'
            --header 'Sec-Fetch-Site: same-origin'
            --header 'Sec-Fetch-User: ?1'
            -o 'zig.tar.xz.minisign'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ghcr.io/kwitsch/ziggoimg:development
          cache-from: type=gha
          cache-to: type=gha,mode=max

  image-scan:
    name: Image vulnerability scan
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/kwitsch/ziggoimg:development'
          format: 'sarif'
          output: 'trivy-image-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
