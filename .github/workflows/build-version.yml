name: Build Version

on:
  workflow_call:
    inputs:
      zig_version:
        description: "Zig version"
        required: true
        type: string
      docker_tag:
        description: "Docker tag"
        required: true
        type: string

permissions:
  security-events: write
  actions: read
  contents: read
  packages: write

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Zig directory
        id: cache-zigdir
        uses: actions/cache@v3
        with:
          key: zigdir-${{ inputs.zig_version }}
          path: |
            zigdir

      - name: Cache Zig
        id: cache-zig
        if: steps.cache-zigdir.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          key: zig-${{ inputs.zig_version }}
          path: |
            zig.tar.xz
            zig.tar.xz.minisign
      
      - name: Get Zig
        if: steps.cache-zig.outputs.cache-hit != 'true' && steps.cache-zigdir.outputs.cache-hit != 'true'
        shell: bash
        run: |
          curl --location --request GET 'https://ziglang.org/download/${{ inputs.zig_version }}/zig-linux-x86_64-${{ github.event.inputs.zig_version }}.tar.xz' \
          --header 'User-Agent: Chrome/113.0.0.0' \
          --header 'Referer: https://ziglang.org/download/' \
          --header 'Sec-Ch-Ua: "Google Chrome";v="113", "Chromium";v="113", "Not-A.Brand";v="24"' \
          --header 'Sec-Ch-Ua-Mobile: ?0' \
          --header 'Sec-Ch-Ua-Platform: "Linux"' \
          --header 'Sec-Fetch-Dest: document' \
          --header 'Sec-Fetch-Mode: navigate' \
          --header 'Sec-Fetch-Site: same-origin' \
          --header 'Sec-Fetch-User: ?1' \
          -o 'zig.tar.xz'

          curl --location --request GET 'https://ziglang.org/download/${{ inputs.zig_version }}/zig-linux-x86_64-${{ github.event.inputs.zig_version }}.tar.xz.minisig' \
          --header 'User-Agent: Chrome/113.0.0.0' \
          --header 'Referer: https://ziglang.org/download/' \
          --header 'Sec-Ch-Ua: "Google Chrome";v="113", "Chromium";v="113", "Not-A.Brand";v="24"' \
          --header 'Sec-Ch-Ua-Mobile: ?0' \
          --header 'Sec-Ch-Ua-Platform: "Linux"' \
          --header 'Sec-Fetch-Dest: document' \
          --header 'Sec-Fetch-Mode: navigate' \
          --header 'Sec-Fetch-Site: same-origin' \
          --header 'Sec-Fetch-User: ?1' \
          -o 'zig.tar.xz.minisign'

          cat zig.tar.xz.minisign

      - name: Verify download
        if: steps.cache-zig.outputs.cache-hit != 'true' && steps.cache-zigdir.outputs.cache-hit != 'true'
        uses: thomasdesr/minisign-action@v1
        with:
          args: -Vm zig.tar.xz -x zig.tar.xz.minisign -P "RWSGOq2NVecA2UPNdBUZykf1CCb147pkmdtYxgb3Ti+JO/wCYvhbAb/U"

      - name: Get Zig
        if: steps.cache-zigdir.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir zigdir
          tar -Jxf zig.tar.xz -C "zigdir"
          rm -R ./zigdir/lib/libc/include/any-windows-any
          rm -R ./zigdir/lib/libc/include/aarch64-macos.11-none
          rm -R ./zigdir/lib/libc/include/aarch64-macos.12-none
          rm -R ./zigdir/lib/libc/include/aarch64-macos.13-none
          rm -R ./zigdir/lib/libc/include/any-macos-any
          rm -R ./zigdir/lib/libc/include/any-macos.11-any
          rm -R ./zigdir/lib/libc/include/any-macos.12-any
          rm -R ./zigdir/lib/libc/include/any-macos.13-any
          rm -R ./zigdir/doc

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/kwitsch/ziggoimg
          tags: |
            type=raw,value=${{ inputs.docker_tag }}
            type=raw,value=${{ inputs.zig_version }},enable=${{ inputs.docker_tag == 'latest' }}
          labels: |
            org.opencontainers.image.version=${{ inputs.zig_version }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'sarif'
          output: 'trivy-image-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
