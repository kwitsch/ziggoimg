name: Build Version

on:
  workflow_call:
    inputs:
      zig_version:
        description: "Zig version"
        required: true
        type: string
      docker_tag:
        description: "Docker tag"
        required: true
        type: string

permissions:
  security-events: write
  actions: read
  contents: read
  packages: write

concurrency: 
  group: ${{ inputs.docker_tag }}-${{ inputs.zig_version }}
  cancel-in-progress: true

jobs:
  check-dir:
    name: Check if Zig ${{ inputs.zig_version }} has to be fetched
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.check-zigdir.outputs.cache-hit }}
    steps:
      - name: Check
        id: check-zigdir
        uses: actions/cache/restore@v3
        with:
          key: zigdir-${{ inputs.zig_version }}
          path: |
            zigdir

  fetch:
    name: Fetch Zig directory for ${{ inputs.zig_version }}
    needs: check-dir
    if: needs.check-dir.outputs.cache-hit != 'true'
    uses: kwitsch/ziggoimg/.github/workflows/get-zigdir.yml@main
    with:
      zig_version: ${{ inputs.zig_version }}

  docker:
    name: Build Docker image
    needs: [ check-dir, fetch ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Zig directory
        id: cache-zigdir
        uses: actions/cache/restore@v3
        with:
          key: zigdir-${{ inputs.zig_version }}
          path: |
            zigdir

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/kwitsch/ziggoimg
          tags: |
            type=raw,value=${{ inputs.docker_tag }}
            type=raw,value=${{ inputs.zig_version }},enable=${{ inputs.docker_tag == 'latest' }}
          labels: |
            org.opencontainers.image.version=${{ inputs.zig_version }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  image-scan:
    name: Image vulnerability scan
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/kwitsch/ziggoimg:${{ inputs.docker_tag }}
          format: 'sarif'
          output: 'trivy-image-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
